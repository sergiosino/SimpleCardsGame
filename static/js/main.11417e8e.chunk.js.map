{"version":3,"sources":["App.js","styles/styles.js","components/OptionsDialog.js","components/ApplicationBar.js","images/gray_back.png","components/Card.js","components/CardBoard.js","components/Header.js","constants/cardTypes.js","images/2H.png","images/2S.png","images/3C.png","images/3D.png","images/3H.png","images/3S.png","images/4C.png","images/4D.png","images/4H.png","images/4S.png","images/5C.png","images/5D.png","components/WinDialog.js","index.js"],"names":["interval","makeStyles","theme","cardImage","maxHeight","maxWidth","app","flexGrow","cardContainer","padding","spacing","titleContainer","formControl","margin","width","alignCenter","textAlign","version","position","bottom","right","FullDialog","props","dialogOpen","setDialogOpen","numberCards","changeNumberCards","flipTime","changeFlipTime","classes","styles","Dialog","fullWidth","open","aria-labelledby","DialogTitle","id","DialogContent","dividers","Grid","container","item","xs","lg","style","display","FormControl","variant","className","InputLabel","Select","labelId","value","onChange","label","MenuItem","DialogActions","Button","onClick","color","useStyles","title","ApplicationBar","resetGame","showRetry","Fragment","AppBar","Toolbar","Typography","IconButton","aria-label","aria-controls","aria-haspopup","height","Card","index","img","turned","onClickCard","syles","isFlipped","flipDirection","alt","src","BackCard","CardBoard","allCards","Paper","elevation","justify","length","map","card","sm","md","Header","timerFormat","gameWon","attempts","baseCards","WinDialog","button","startIcon","isShowingCards","App","useState","setAllCards","cardsOk","setCardsOk","timer","setTimer","setAttempts","setNumberCards","dialogOptionsOpen","setDialogOptionsOpen","dialogWinOpen","setDialogWinOpen","setGameWon","setFlipTime","isFirstClick","setIsFirstClick","prepareCard","clearInterval","duplicatedCards","duplicateElements","cardTypes","slice","shuffledCards","shuffleElements","array","i","j","Math","floor","random","temp","JSON","parse","stringify","flatMap","failureAttempt","newAllCards","setTimeout","splice","useEffect","minutes","seconds","alignItems","cardId","filter","x","successAttempt","setInterval","OptionsDialog","event","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11417e8e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport OptionsDialog from './components/OptionsDialog';\nimport ApplicationBar from './components/ApplicationBar';\nimport CardBoard from './components/CardBoard';\nimport Header from './components/Header';\nimport cardTypes from './constants/cardTypes';\nimport WinDialog from './components/WinDialog';\n\nlet isShowingCards = false;\nlet interval;\n\nconst App = (props) => {\n\n  const [allCards, setAllCards] = useState([]);\n  const [cardsOk, setCardsOk] = useState([]);\n  const [timer, setTimer] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [numberCards, setNumberCards] = useState(4);\n  const [dialogOptionsOpen, setDialogOptionsOpen] = useState(false);\n  const [dialogWinOpen, setDialogWinOpen] = useState(false);\n  const [gameWon, setGameWon] = useState(false);\n  const [flipTime, setFlipTime] = useState(1000);\n  const [isFirstClick, setIsFirstClick] = useState(false);\n\n  const resetGame = () => {\n    prepareCard();\n    setIsFirstClick(false);\n    clearInterval(interval);\n    setCardsOk([]);\n    setTimer(0);\n    setAttempts(0);\n    setGameWon(false);\n    setDialogWinOpen(false);\n  }\n\n  const changeNumberCards = (event) => {\n    resetGame();\n    setNumberCards(event.target.value);\n  };\n\n  const changeFlipTime = (event) => {\n    resetGame();\n    setFlipTime(event.target.value);\n  }\n\n  const prepareCard = () => {\n    // 4, 6, 12\n    let duplicatedCards = duplicateElements(cardTypes.slice(0, numberCards));\n    let shuffledCards = shuffleElements(duplicatedCards);\n    setAllCards(shuffledCards);\n  }\n\n  const shuffleElements = (array) => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return JSON.parse(JSON.stringify(array));\n  };\n\n  const duplicateElements = (array) => {\n    return JSON.parse(JSON.stringify(array.flatMap(i => [i, i])));\n  };\n\n  const deleteLastTwoElement = (array) => {\n    array.splice(array.length - 1, array.length);\n    return JSON.parse(JSON.stringify(array));\n  };\n\n  const successAttempt = (newAllCards, index, cardId) => {\n    setAllCards(newAllCards);\n    setCardsOk([...cardsOk, { index, id: cardId }]);\n  };\n\n  const failureAttempt = (newAllCards, index) => {\n    isShowingCards = true;\n    setTimeout(function () {\n      newAllCards[index].turned = false;\n      newAllCards[cardsOk[cardsOk.length - 1].index].turned = false;\n      setAllCards(newAllCards);\n      setCardsOk(deleteLastTwoElement(cardsOk));\n      setAttempts(attempts => attempts + 1);\n      isShowingCards = false;\n    }, flipTime);\n  };\n\n  const initialiceTimer = () => {\n    setIsFirstClick(true);\n    interval = setInterval(() => {\n      setTimer(timer => timer + 1);\n    }, 1000);\n  };\n\n  const onClickCard = (index, cardId) => () => {\n    if (isShowingCards)\n      return;\n\n    let newAllCards = JSON.parse(JSON.stringify(allCards));\n    newAllCards[index].turned = !newAllCards[index].turned;\n    setAllCards(newAllCards);\n\n    if (allCards.filter(x => x.turned === true).length % 2 === 0)\n      setCardsOk([...cardsOk, { index, id: cardId }]);\n    else if (cardsOk[cardsOk.length - 1].id === cardId)\n      successAttempt(newAllCards, index, cardId);\n    else\n      failureAttempt(newAllCards, index);\n\n    if (!isFirstClick)\n      initialiceTimer();\n  };\n\n  const endGame = () => {\n    clearInterval(interval);\n    setGameWon(true);\n    setDialogWinOpen(true);\n  }\n\n  useEffect(() => {\n    resetGame();\n\n    return () => {\n      clearInterval(interval);\n    }\n  }, [numberCards]);\n\n  useEffect(() => {\n    if (cardsOk.length === allCards.length && isFirstClick) {\n      endGame();\n    }\n  }, [cardsOk]);\n\n  const timerFormat = () => {\n    let minutes = ~~((timer % 3600) / 60);\n    let seconds = ~~timer % 60;\n\n    return (minutes < 10 ? \"0\" : \"\") + minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n  };\n\n  return (\n    <React.Fragment>\n      <ApplicationBar\n        setDialogOpen={setDialogOptionsOpen}\n        resetGame={resetGame}\n        showRetry={isFirstClick}\n      />\n      <Grid container justify=\"center\">\n        <Grid item xs={11} sm={11}>\n          <Grid container spacing={3} justify=\"center\">\n            <Grid item xs={12}>\n              <Header \n                timerFormat={timerFormat} \n                attempts={attempts} \n                gameWon={gameWon}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item xs={12} sm={11}>\n                  <CardBoard \n                    allCards={allCards} \n                    onClickCard={onClickCard} \n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      <OptionsDialog\n        dialogOpen={dialogOptionsOpen}\n        setDialogOpen={setDialogOptionsOpen}\n        changeNumberCards={changeNumberCards}\n        numberCards={numberCards}\n        flipTime={flipTime}\n        changeFlipTime={changeFlipTime}\n      />\n      <WinDialog\n        dialogOpen={dialogWinOpen}\n        setDialogOpen={setDialogWinOpen}\n        timerFormat={timerFormat}\n        attempts={attempts}\n        resetGame={resetGame}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    cardImage: {\r\n        maxHeight: \"100%\",\r\n        maxWidth: \"100%\"\r\n    },\r\n    app: {\r\n        flexGrow: 1\r\n    },\r\n    cardContainer: {\r\n        padding: theme.spacing(1)\r\n    },\r\n    titleContainer: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        width: \"100%\",\r\n    },\r\n    alignCenter: {\r\n        textAlign: \"center\",\r\n    },\r\n    version: {\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n        right: 0,\r\n    }\r\n}));","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport styles from '../styles/styles';\r\n\r\nconst FullDialog = (props) => {\r\n  const { dialogOpen, setDialogOpen, numberCards, changeNumberCards, flipTime, changeFlipTime } = props;\r\n\r\n  const classes = styles();\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth=\"sm\"\r\n      open={dialogOpen}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} lg={6} style={{display: \"flex\"}}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">Cards number</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={numberCards}\r\n                onChange={changeNumberCards}\r\n                label=\"Cards number\"\r\n              >\r\n                <MenuItem value={4}>8</MenuItem>\r\n                <MenuItem value={6}>12</MenuItem>\r\n                <MenuItem value={12}>24</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} lg={6} style={{display: \"flex\"}}>\r\n            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">Card flip time (seconds)</InputLabel>\r\n              <Select\r\n                labelId=\"demo-simple-select-outlined-label\"\r\n                id=\"demo-simple-select-outlined\"\r\n                value={flipTime}\r\n                onChange={changeFlipTime}\r\n                label=\"Card flip time (seconds)\"\r\n              >\r\n                <MenuItem value={1000}>1</MenuItem>\r\n                <MenuItem value={750}>0.75</MenuItem>\r\n                <MenuItem value={500}>0.5</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setDialogOpen(false)} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default FullDialog;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\n\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\n\r\nconst ApplicationBar = (props) => {\r\n    const { setDialogOpen, resetGame, showRetry } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Simple card game\r\n                </Typography>\r\n                    {\r\n                        showRetry &&\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={() => resetGame()}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <LoopIcon />\r\n                        </IconButton>\r\n                    }\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"menu-appbar\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={() => setDialogOpen(true)}\r\n                        color=\"inherit\"\r\n                    >\r\n                        <SettingsOutlinedIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div style={{ height: 20 }} />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ApplicationBar;","export default __webpack_public_path__ + \"static/media/gray_back.0afd2efb.png\";","import React from 'react';\r\n\r\nimport CardFlip from 'react-card-flip';\r\n\r\nimport syles from '../styles/styles';\r\nimport BackCard from '../images/gray_back.png'\r\n\r\nconst Card = (props) => {\r\n    const { index, id, img, turned, onClickCard } = props;\r\n    \r\n    const { cardImage } = syles();\r\n\r\n    return (\r\n        <CardFlip isFlipped={turned} flipDirection=\"horizontal\">\r\n            {/* Front card */}\r\n            <img className={cardImage} alt={id} src={BackCard} onClick={onClickCard(index, id)} />\r\n            {/* Back card */}\r\n            <img className={cardImage} alt={id} src={img} />\r\n        </CardFlip>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Card from '../components/Card';\r\nimport styles from '../styles/styles';\r\n\r\nconst CardBoard = (props) => {\r\n    const { allCards, onClickCard } = props;\r\n\r\n    const classes = styles();\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.cardContainer} >\r\n            <Grid container spacing={1} justify=\"center\" >\r\n                {\r\n                    allCards.length === 24 ?\r\n                        allCards.map((card, index) => {\r\n                            return (\r\n                                <Grid key={index} item xs={2} sm={2} md={2} lg={1} >\r\n                                    <Card index={index} id={card.id} img={card.img} turned={card.turned} onClickCard={onClickCard} />\r\n                                </Grid>\r\n                            );\r\n                        })\r\n                        :\r\n                        allCards.map((card, index) => {\r\n                            return (\r\n                                <Grid key={index} item xs={3} sm={3} md={2} lg={1} >\r\n                                    <Card index={index} id={card.id} img={card.img} turned={card.turned} onClickCard={onClickCard} />\r\n                                </Grid>\r\n                            );\r\n                        })\r\n                }\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default CardBoard;","import React from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport styles from '../styles/styles';\r\n\r\nconst Header = (props) => {\r\n    const { timerFormat, attempts, gameWon } = props;\r\n\r\n    const classes = styles();\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.titleContainer}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={6} className={classes.alignCenter}>\r\n                    {gameWon ? \"Well done!\" : \"Look for the pairs!\"}\r\n                </Grid>\r\n                <Grid item xs={6} className={classes.alignCenter}>\r\n                    Timer: {timerFormat()}\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Header;","import image1 from '../images/2H.png';\r\nimport image2 from '../images/2S.png';\r\nimport image3 from '../images/3C.png';\r\nimport image4 from '../images/3D.png';\r\nimport image5 from '../images/3H.png';\r\nimport image6 from '../images/3S.png';\r\nimport image7 from '../images/4C.png';\r\nimport image8 from '../images/4D.png';\r\nimport image9 from '../images/4H.png';\r\nimport image10 from '../images/4S.png';\r\nimport image11 from '../images/5C.png';\r\nimport image12 from '../images/5D.png';\r\n// import image13 from '../images/5H.png';\r\n// import image14 from '../images/5S.png';\r\n// import image15 from '../images/6C.png';\r\n// import image16 from '../images/6D.png';\r\n// import image17 from '../images/6H.png';\r\n// import image18 from '../images/7C.png';\r\n// import image19 from '../images/7D.png';\r\n// import image20 from '../images/7H.png';\r\n// import image21 from '../images/7S.png';\r\n// import image22 from '../images/8C.png';\r\n// import image23 from '../images/8D.png';\r\n// import image24 from '../images/8H.png';\r\n// import image25 from '../images/8S.png';\r\n// import image26 from '../images/9C.png';\r\n// import image27 from '../images/9D.png';\r\n// import image28 from '../images/9H.png';\r\n// import image29 from '../images/9S.png';\r\n// import image30 from '../images/10C.png';\r\n// import image31 from '../images/10D.png';\r\n// import image32 from '../images/10S.png';\r\n// import image33 from '../images/AC.png';\r\n// import image34 from '../images/JD.png';\r\n// import image35 from '../images/JH.png';\r\n// import image36 from '../images/JS.png';\r\n// import image37 from '../images/KC.png';\r\n// import image38 from '../images/KD.png';\r\n// import image39 from '../images/KH.png';\r\n// import image40 from '../images/KS.png';\r\n// import image41 from '../images/QC.png';\r\n// import image42 from '../images/QD.png';\r\n// import image43 from '../images/QH.png';\r\n// import image44 from '../images/QS.png';\r\n\r\nconst baseCards = [\r\n    {\r\n      id: 1,\r\n      img: image1,\r\n      turned: false\r\n    },\r\n    {\r\n      id: 2,\r\n      img: image2,\r\n      turned: false\r\n    },\r\n    {\r\n      id: 3,\r\n      img: image3,\r\n      turned: false\r\n    },\r\n    {\r\n      id: 4,\r\n      img: image4,\r\n      turned: false\r\n    },\r\n    {\r\n      id: 5,\r\n      img: image5,\r\n      turned: false\r\n    },\r\n    {\r\n      id: 6,\r\n      img: image6,\r\n      turned: false\r\n    },\r\n    {\r\n      id: 7,\r\n      img: image7,\r\n      turned: false\r\n    },\r\n    {\r\n      id: 8,\r\n      img: image8,\r\n      turned: false\r\n    },\r\n    {\r\n      id: 9,\r\n      img: image9,\r\n      turned: false\r\n    },\r\n    {\r\n      id: 10,\r\n      img: image10,\r\n      turned: false\r\n    },\r\n    {\r\n      id: 11,\r\n      img: image11,\r\n      turned: false\r\n    },\r\n    {\r\n      id: 12,\r\n      img: image12,\r\n      turned: false\r\n    }\r\n  ];\r\n  \r\nexport default baseCards;","export default __webpack_public_path__ + \"static/media/2H.44b256f0.png\";","export default __webpack_public_path__ + \"static/media/2S.b0efcac0.png\";","export default __webpack_public_path__ + \"static/media/3C.740490f6.png\";","export default __webpack_public_path__ + \"static/media/3D.e8d502dd.png\";","export default __webpack_public_path__ + \"static/media/3H.ec26afbd.png\";","export default __webpack_public_path__ + \"static/media/3S.9c2eae6c.png\";","export default __webpack_public_path__ + \"static/media/4C.03a77942.png\";","export default __webpack_public_path__ + \"static/media/4D.6198dfa5.png\";","export default __webpack_public_path__ + \"static/media/4H.5c782cf1.png\";","export default __webpack_public_path__ + \"static/media/4S.8c4d9f8f.png\";","export default __webpack_public_path__ + \"static/media/5C.558517b0.png\";","export default __webpack_public_path__ + \"static/media/5D.0eeb59f1.png\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LoopIcon from '@material-ui/icons/Loop';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport styles from '../styles/styles';\r\n\r\nconst WinDialog = (props) => {\r\n  const { dialogOpen, setDialogOpen, timerFormat, attempts, resetGame } = props;\r\n\r\n  const classes = styles();\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth=\"sm\"\r\n      open={dialogOpen}\r\n      aria-labelledby=\"max-width-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"max-width-dialog-title\">\r\n        <Typography variant=\"h5\">\r\n          Nice one!\r\n        </Typography>\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} lg={6} className={classes.alignCenter}>\r\n            <Typography variant=\"h6\">\r\n              Timer: {timerFormat()}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} lg={6} className={classes.alignCenter}>\r\n            <Typography variant=\"h6\">\r\n              Attemps: {attempts}\r\n            </Typography>\r\n          </Grid>\r\n          <div style={{ height: 50 }} />\r\n          <Grid item xs={12} lg={12} className={classes.alignCenter}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              onClick={() => { setDialogOpen(true); resetGame(); }}\r\n              startIcon={<LoopIcon />}\r\n            >\r\n              Retry\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setDialogOpen(false)} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default WinDialog;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}